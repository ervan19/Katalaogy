{"version":3,"file":"app~7bd12dde.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurants-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import {openDB} from \"idb\";\nimport CONFIG from \"../globals/config\";\n\nconst {DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME} = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n    upgrade(database) {\n        database.createObjectStore(OBJECT_STORE_NAME, {\n            keyPath: \"id\",\n        });\n    },\n});\n\nconst FavoriteRestaurantIdb = {\n    async getRestaurant(id) {\n        if (!id) {\n            return;\n        }\n\n        return (await dbPromise).get(OBJECT_STORE_NAME, id);\n    },\n\n    async getAllRestaurants() {\n        return (await dbPromise).getAll(OBJECT_STORE_NAME);\n    },\n\n    async putRestaurant(restaurant) {\n        if (!Object.prototype.hasOwnProperty.call(restaurant, \"id\")) {\n            return;\n        }\n        return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\n    },\n\n    async deleteRestaurant(id) {\n        return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n    },\n\n    async searchRestaurants(query) {\n        return (await this.getAllRestaurants()).filter((restaurant) => {\n            const loweredCaseRestaurantName = (restaurant.name || \"-\").toLowerCase();\n            const jammedRestaurantName = loweredCaseRestaurantName.replace(/\\s/g, \"\");\n            const loweredCaseQuery = query.toLowerCase();\n            const jammedQuery = loweredCaseQuery.replace(/\\s/g, \"\");\n            return jammedRestaurantName.indexOf(jammedQuery) !== -1;\n        });\n    },\n};\n\nexport default FavoriteRestaurantIdb;\n","import CONFIG from \"./config\";\n\nconst API_ENDPOINT = {\n    RESTAURANT: `${CONFIG.BASE_URL}list`,\n    DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\n    SEARCH: (query) => `${CONFIG.BASE_URL}search?q=${query}`,\n    ADD_REVIEW: `${CONFIG.BASE_URL}review`,\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from \"../globals/api-endpoint\";\n\nclass RestaurantsSource {\n    static async restaurantsList() {\n        const response = await fetch(API_ENDPOINT.RESTAURANT);\n        const responseJson = await response.json();\n\n        return responseJson.restaurants;\n    }\n\n    static async detailRestaurant(id) {\n        const response = await fetch(API_ENDPOINT.DETAIL(id));\n        const responseJson = await response.json();\n        return responseJson.restaurant;\n    }\n\n    static async searchRestaurant(query) {\n        const response = await fetch(API_ENDPOINT.SEARCH(query));\n\n        return response.json();\n    }\n\n    static async addReview(data) {\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        };\n\n        const response = await fetch(API_ENDPOINT.ADD_REVIEW, options);\n\n        const responseJson = await response.json();\n\n        return responseJson;\n    }\n}\n\nexport default RestaurantsSource;\n","const CONFIG = {\n    BASE_URL: \"https://restaurant-api.dicoding.dev/\",\n    BASE_IMAGE_URL: \"https://restaurant-api.dicoding.dev/images/\",\n    DATABASE_NAME: \"restaurant-catalog-database\",\n    DATABASE_VERSION: 1,\n    OBJECT_STORE_NAME: \"restaurants\",\n};\n\nexport default CONFIG;\n","import \"regenerator-runtime\";\nimport \"../styles/style.scss\";\nimport \"./view/components/headerBrand/header_brand\";\nimport \"./view/components/headerLink/header_link\";\nimport \"./view/components/navbar/navbar\";\nimport \"./view/components/footerContainer/footerContainer\";\nimport swRegister from \"./utils/sw-register\";\nimport App from \"./view/app\";\nimport \"lazysizes\";\nimport \"lazysizes/plugins/parent-fit/ls.parent-fit\";\n\nconst app = new App({\n    button: document.querySelector(\".hamburger-menu\"),\n    drawer: document.querySelector(\"nav\"),\n    content: document.querySelector(\"#main\"),\n});\n\nwindow.addEventListener(\"hashchange\", () => {\n    app.renderPage();\n});\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n    app.renderPage();\n    await swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","Object","prototype","hasOwnProperty","call","put","deleteRestaurant","searchRestaurants","query","filter","jammedRestaurantName","name","toLowerCase","replace","jammedQuery","indexOf","RESTAURANT","DETAIL","SEARCH","ADD_REVIEW","RestaurantsSource","fetch","API_ENDPOINT","response","json","responseJson","restaurants","data","options","method","headers","body","JSON","stringify","BASE_URL","BASE_IMAGE_URL","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}