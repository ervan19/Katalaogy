{"version":3,"file":"app~e4317507.bundle.js","mappings":";oKAUA,QANe,CACX,IAAKA,EAAAA,EACL,YAAaC,EAAAA,EACb,cAAeC,EAAAA,oCCuBnB,QA9BkB,CACdC,2BADc,WAEV,IAAMC,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cACpCC,EAAaC,KAAKC,aAAaR,GACrC,OAAOO,KAAKE,aAAaH,EAC5B,EAEDI,8BAPc,WAQV,IAAMV,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cAC1C,OAAOE,KAAKC,aAAaR,EAC5B,EAEDQ,aAZc,SAYDR,GACT,IAAMW,EAAaX,EAAIY,MAAM,KAC7B,MAAO,CACHC,SAAUF,EAAW,IAAM,KAC3BG,GAAIH,EAAW,IAAM,KACrBI,KAAMJ,EAAW,IAAM,KAE9B,EAEDF,aArBc,SAqBDH,GACT,OACKA,EAAWO,SAAX,WAA0BP,EAAWO,UAAa,MACxDP,EAAWQ,GAAK,OAAS,KACzBR,EAAWS,KAAX,WAAsBT,EAAWS,MAAS,GAE5C,oCCLL,QAtBwB,CACpBC,KADoB,YACY,WAA1BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAClBF,EAAOG,iBAAiB,SAAS,SAACC,GAC9B,EAAKC,cAAcD,EAAOH,EAC7B,IAEDC,EAAQC,iBAAiB,SAAS,SAACC,GAC/B,EAAKE,aAAaF,EAAOH,EAC5B,GACJ,EAEDI,cAXoB,SAWND,EAAOH,GACjBG,EAAMG,kBACNN,EAAOO,UAAUC,OAAO,OAC3B,EAEDH,aAhBoB,SAgBPF,EAAOH,GAChBG,EAAMG,kBACNN,EAAOO,UAAUE,OAAO,OAC3B,qSClBL,smNAkDA,QA9C4B,CAClBX,KADkB,YAC2C,6HAAvDY,EAAuD,EAAvDA,oBAAqBC,EAAkC,EAAlCA,oBAAqBC,EAAa,EAAbA,WAClD,EAAKC,qBAAuBH,EAC5B,EAAKI,YAAcF,EACnB,EAAKG,qBAAuBJ,EAHmC,SAKzD,EAAKK,gBALoD,4CAMlE,EAEKA,cATkB,WASF,yHACXpB,EAAM,EAAKkB,YAAXlB,GADW,SAGR,EAAKqB,mBAAmBrB,GAHhB,kCAId,EAAKsB,eAJS,sBAMd,EAAKC,cANS,4CAQrB,EAEKF,mBAnBkB,SAmBCrB,GAAI,kIACA,EAAKmB,qBAAqBK,cAAcxB,GADxC,cACnBgB,EADmB,2BAEhBA,GAFgB,4CAG5B,EAEDO,YAxBwB,WAwBV,WACV9B,KAAKwB,qBAAqBQ,WAAYC,EAAAA,EAAAA,KAEnBC,SAASC,cAAc,eAC/BtB,iBAAiB,QAA5B,YAAqC,8FAC3B,EAAKa,qBAAqBU,cAAc,EAAKX,aADlB,OAEjC,EAAKE,gBAF4B,2CAIxC,EAEDE,aAlCwB,WAkCT,WACX7B,KAAKwB,qBAAqBQ,WAAYK,EAAAA,EAAAA,KAEnBH,SAASC,cAAc,eAC/BtB,iBAAiB,QAA5B,YAAqC,8FAC3B,EAAKa,qBAAqBY,iBAAiB,EAAKb,YAAYlB,IADjC,OAGjC,EAAKoB,gBAH4B,2CAKxC,qSC/CL,m6MAgBA,QAfgB,gCAAG,uFACT,kBAAmBY,UADV,uBAEXC,QAAQC,IAAI,+CAFD,iCAMTC,EAAK,IAAIC,EAAAA,GAAsB,iBANtB,kBAQLD,EAAGE,WARE,OASXJ,QAAQC,IAAI,6BATD,kDAWXD,QAAQC,IAAI,oCAAZ,MAXW,wOAAH","sources":["webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/utils/drawer-initiator.js","webpack://restaurant-apps/./src/scripts/utils/like-button-presenter.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js"],"sourcesContent":["import HomePage from \"../view/pages/home-page\";\nimport FavoritePage from \"../view/pages/favorite\";\nimport Detail from \"../view/pages/detail\";\n\nconst routes = {\n    \"/\": HomePage,\n    \"/favorite\": FavoritePage,\n    \"/detail/:id\": Detail,\n};\n\nexport default routes;\n","const UrlParser = {\n    parseActiveUrlWithCombiner() {\n        const url = window.location.hash.slice(1).toLowerCase();\n        const splitedUrl = this._urlSplitter(url);\n        return this._urlCombiner(splitedUrl);\n    },\n\n    parseActiveUrlWithoutCombiner() {\n        const url = window.location.hash.slice(1).toLowerCase();\n        return this._urlSplitter(url);\n    },\n\n    _urlSplitter(url) {\n        const urlsSplits = url.split(\"/\");\n        return {\n            resource: urlsSplits[1] || null,\n            id: urlsSplits[2] || null,\n            verb: urlsSplits[3] || null,\n        };\n    },\n\n    _urlCombiner(splitedUrl) {\n        return (\n            (splitedUrl.resource ? `/${splitedUrl.resource}` : \"/\") +\n      (splitedUrl.id ? \"/:id\" : \"\") +\n      (splitedUrl.verb ? `/${splitedUrl.verb}` : \"\")\n        );\n    },\n};\n\nexport default UrlParser;\n","const DrawerInitiator = {\n    init({button, drawer, content}) {\n        button.addEventListener(\"click\", (event) => {\n            this._toggleDrawer(event, drawer);\n        });\n\n        content.addEventListener(\"click\", (event) => {\n            this._closeDrawer(event, drawer);\n        });\n    },\n\n    _toggleDrawer(event, drawer) {\n        event.stopPropagation();\n        drawer.classList.toggle(\"open\");\n    },\n\n    _closeDrawer(event, drawer) {\n        event.stopPropagation();\n        drawer.classList.remove(\"open\");\n    },\n};\n\nexport default DrawerInitiator;\n","import {\n    createLikeButtonTemplate,\n    createLikedButtonTemplate,\n} from \"../view/templates/createLikeButtonTemplate\";\n\nconst LikeButtonPresenter = {\n    async init({likeButtonContainer, favoriteRestaurants, restaurant}) {\n        this._likeButtonContainer = likeButtonContainer;\n        this._restaurant = restaurant;\n        this._favoriteRestaurants = favoriteRestaurants;\n\n        await this._renderButton();\n    },\n\n    async _renderButton() {\n        const {id} = this._restaurant;\n\n        if (await this._isRestaurantExist(id)) {\n            this._renderLiked();\n        } else {\n            this._renderLike();\n        }\n    },\n\n    async _isRestaurantExist(id) {\n        const restaurant = await this._favoriteRestaurants.getRestaurant(id);\n        return !!restaurant;\n    },\n\n    _renderLike() {\n        this._likeButtonContainer.innerHTML = createLikeButtonTemplate();\n\n        const likeButton = document.querySelector(\"#likeButton\");\n        likeButton.addEventListener(\"click\", async () => {\n            await this._favoriteRestaurants.putRestaurant(this._restaurant);\n            this._renderButton();\n        });\n    },\n\n    _renderLiked() {\n        this._likeButtonContainer.innerHTML = createLikedButtonTemplate();\n\n        const likeButton = document.querySelector(\"#likeButton\");\n        likeButton.addEventListener(\"click\", async () => {\n            await this._favoriteRestaurants.deleteRestaurant(this._restaurant.id);\n\n            this._renderButton();\n        });\n    },\n};\n\nexport default LikeButtonPresenter;\n","import * as WorkboxWindow from \"workbox-window\";\n\nconst swRegister = async () => {\n    if (!(\"serviceWorker\" in navigator)) {\n        console.log(\"Service Worker not supported in the browser\");\n        return;\n    }\n\n    const wb = new WorkboxWindow.Workbox(\"/sw.bundle.js\");\n    try {\n        await wb.register();\n        console.log(\"Service worker registered\");\n    } catch (error) {\n        console.log(\"Failed to register service worker\", error);\n    }\n};\n\nexport default swRegister;\n"],"names":["HomePage","FavoritePage","Detail","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","init","button","drawer","content","addEventListener","event","_toggleDrawer","_closeDrawer","stopPropagation","classList","toggle","remove","likeButtonContainer","favoriteRestaurants","restaurant","_likeButtonContainer","_restaurant","_favoriteRestaurants","_renderButton","_isRestaurantExist","_renderLiked","_renderLike","getRestaurant","innerHTML","createLikeButtonTemplate","document","querySelector","putRestaurant","createLikedButtonTemplate","deleteRestaurant","navigator","console","log","wb","WorkboxWindow","register"],"sourceRoot":""}